plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom' version '1.0-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

java {
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(17)
}

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://jitpack.io' } // MixinExtras
    mavenCentral()
}

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    implementation "com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}"
    annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")

    modImplementation "me.lucko:fabric-permissions-api:${project.fabric_permissions_version}"
    modImplementation "com.github.Fallen-Breath:conditional-mixin:${project.conditional_mixin_version}"

    Set<String> apiModules = [
            'fabric-command-api-v1'
    ]
    apiModules.forEach {
        modImplementation(fabricApi.module(it, project.fabric_version))
    }
}


processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}


loom {
    accessWidenerPath.set(file("src/main/resources/vanilla-permissions.accesswidener"))
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
